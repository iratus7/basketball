//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BasketballApp.BasketballService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/WcfBasketball")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BasketballService.IServicebasketball")]
    public interface IServicebasketball {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicebasketball/GetData", ReplyAction="http://tempuri.org/IServicebasketball/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicebasketball/GetData", ReplyAction="http://tempuri.org/IServicebasketball/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicebasketball/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IServicebasketball/GetDataUsingDataContractResponse")]
        BasketballApp.BasketballService.CompositeType GetDataUsingDataContract(BasketballApp.BasketballService.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicebasketball/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IServicebasketball/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<BasketballApp.BasketballService.CompositeType> GetDataUsingDataContractAsync(BasketballApp.BasketballService.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicebasketball/Validate", ReplyAction="http://tempuri.org/IServicebasketball/ValidateResponse")]
        bool Validate(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicebasketball/Validate", ReplyAction="http://tempuri.org/IServicebasketball/ValidateResponse")]
        System.Threading.Tasks.Task<bool> ValidateAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicebasketball/UpdateXmlStats", ReplyAction="http://tempuri.org/IServicebasketball/UpdateXmlStatsResponse")]
        string UpdateXmlStats(int GameId, string HomeXml, string AwayXml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicebasketball/UpdateXmlStats", ReplyAction="http://tempuri.org/IServicebasketball/UpdateXmlStatsResponse")]
        System.Threading.Tasks.Task<string> UpdateXmlStatsAsync(int GameId, string HomeXml, string AwayXml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicebasketball/SendXmltoDatabase", ReplyAction="http://tempuri.org/IServicebasketball/SendXmltoDatabaseResponse")]
        string SendXmltoDatabase(string HomeXml, string AwayXml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicebasketball/SendXmltoDatabase", ReplyAction="http://tempuri.org/IServicebasketball/SendXmltoDatabaseResponse")]
        System.Threading.Tasks.Task<string> SendXmltoDatabaseAsync(string HomeXml, string AwayXml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicebasketball/GetTodayMatches", ReplyAction="http://tempuri.org/IServicebasketball/GetTodayMatchesResponse")]
        System.Data.DataTable GetTodayMatches();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicebasketball/GetTodayMatches", ReplyAction="http://tempuri.org/IServicebasketball/GetTodayMatchesResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetTodayMatchesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicebasketball/GetHomeRoster", ReplyAction="http://tempuri.org/IServicebasketball/GetHomeRosterResponse")]
        System.Data.DataTable GetHomeRoster(int GameId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicebasketball/GetHomeRoster", ReplyAction="http://tempuri.org/IServicebasketball/GetHomeRosterResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetHomeRosterAsync(int GameId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicebasketball/GetAwayRoster", ReplyAction="http://tempuri.org/IServicebasketball/GetAwayRosterResponse")]
        System.Data.DataTable GetAwayRoster(int GameId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicebasketball/GetAwayRoster", ReplyAction="http://tempuri.org/IServicebasketball/GetAwayRosterResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetAwayRosterAsync(int GameId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicebasketballChannel : BasketballApp.BasketballService.IServicebasketball, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicebasketballClient : System.ServiceModel.ClientBase<BasketballApp.BasketballService.IServicebasketball>, BasketballApp.BasketballService.IServicebasketball {
        
        public ServicebasketballClient() {
        }
        
        public ServicebasketballClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicebasketballClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicebasketballClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicebasketballClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public BasketballApp.BasketballService.CompositeType GetDataUsingDataContract(BasketballApp.BasketballService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<BasketballApp.BasketballService.CompositeType> GetDataUsingDataContractAsync(BasketballApp.BasketballService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public bool Validate(string username, string password) {
            return base.Channel.Validate(username, password);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateAsync(string username, string password) {
            return base.Channel.ValidateAsync(username, password);
        }
        
        public string UpdateXmlStats(int GameId, string HomeXml, string AwayXml) {
            return base.Channel.UpdateXmlStats(GameId, HomeXml, AwayXml);
        }
        
        public System.Threading.Tasks.Task<string> UpdateXmlStatsAsync(int GameId, string HomeXml, string AwayXml) {
            return base.Channel.UpdateXmlStatsAsync(GameId, HomeXml, AwayXml);
        }
        
        public string SendXmltoDatabase(string HomeXml, string AwayXml) {
            return base.Channel.SendXmltoDatabase(HomeXml, AwayXml);
        }
        
        public System.Threading.Tasks.Task<string> SendXmltoDatabaseAsync(string HomeXml, string AwayXml) {
            return base.Channel.SendXmltoDatabaseAsync(HomeXml, AwayXml);
        }
        
        public System.Data.DataTable GetTodayMatches() {
            return base.Channel.GetTodayMatches();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetTodayMatchesAsync() {
            return base.Channel.GetTodayMatchesAsync();
        }
        
        public System.Data.DataTable GetHomeRoster(int GameId) {
            return base.Channel.GetHomeRoster(GameId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetHomeRosterAsync(int GameId) {
            return base.Channel.GetHomeRosterAsync(GameId);
        }
        
        public System.Data.DataTable GetAwayRoster(int GameId) {
            return base.Channel.GetAwayRoster(GameId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetAwayRosterAsync(int GameId) {
            return base.Channel.GetAwayRosterAsync(GameId);
        }
    }
}
